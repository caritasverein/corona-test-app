version: '3.8'

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile-dev
    restart: unless-stopped
    volumes:
      - ./api:/app
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.mail-report.schedule: "0 18 * * *"
      ofelia.job-exec.mail-report.command: "npm run mail-report"
      ofelia.job-exec.db-retention.schedule: "@every 1h"
      ofelia.job-exec.db-retention.command: "npm run db-retention"
    environment:
      NODE_ENV: development
      LOCATION_NAME: ${LOCATION_NAME:-My Testcenter}
      MYSQL_USER: ${MYSQL_USER:-coronatests}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD?err}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-coronatests}
      CERTIFICATE_PATH: ${CERTIFICATE_PATH:-./res/demoCertificate.pdf}
      ISSUER_BASE_URL: ${OIDC_ISSUER_BASE_URL:-http://oidc-mock:9090}
      CLIENT_ID: ${OIDC_CLIENT_ID:-coronatests}
      SECRET: ${OIDC_APP_SECRET?err}
      SMTP_CONNECTION: ${SMTP_CONNECTION:-}
      SMTP_FROM: ${SMTP_FROM:-noreply@localhost}
      SMTP_OVERWRITE_TO: ${SMTP_OVERWRITE_TO:-}
      REPORT_MAIL: ${REPORT_MAIL:-root@localhost}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID:-}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN:-}
      TWILIO_SMS_FROM: ${TWILIO_SMS_FROM:-+15005550006}
      TWILIO_OVERWRITE_TO: ${TWILIO_OVERWRITE_TO:-}
      WEB_DOMAIN: ${WEB_DOMAIN:-localhost}
      WEB_PROTO: ${WEB_PROTO:-http}
      WEB_PORT: ${WEB_PORT:-8080}
      WEB_PATH: ${WEB_PATH:-/}

  api-test:
    build:
      context: ./api
      dockerfile: Dockerfile-test
    restart: unless-stopped
    volumes:
      - ./api:/app
    environment:
      NODE_ENV: test
      MYSQL_USER: ${MYSQL_USER:-coronatests}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD?err}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-coronatests}

  oidc-mock:
    build:
      context: ./oidc-mock
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "${HOST_OIDC_PORT:-9090}:9090"

  web:
    build:
      context: ./web
      dockerfile: Dockerfile-dev-web
    restart: unless-stopped
    volumes:
      - ./web/proxy/development:/etc/nginx/templates
    ports:
      - "${HOST_WEB_PORT:-8080}:80"

  web-admin:
    build:
      context: ./web
      dockerfile: Dockerfile-dev-admin
    restart: unless-stopped
    volumes:
      - ./web/adminfrontend:/app
      - ./web/shared:/shared
    environment:
      NODE_ENV: development
      REACT_APP_LOCATION_NAME: ${LOCATION_NAME:-My Testcenter}
      REACT_APP_TEST_DURATION: ${TEST_DURATION:-900}
      REACT_APP_THEME_PRIMARY: ${THEME_PRIMARY:-#152968}
      REACT_APP_THEME_ON_PRIMARY: ${THEME_PRIMARY:-#FFF}

  web-user:
    build:
      context: ./web
      dockerfile: Dockerfile-dev-user
    restart: unless-stopped
    volumes:
      - ./web/userfrontend:/app
      - ./web/shared:/shared
    environment:
      NODE_ENV: development
      REACT_APP_LOCATION_NAME: ${LOCATION_NAME:-My Testcenter}
      REACT_APP_LOGO_REF: ${LOGO_REF:-/logo.png}
      REACT_APP_INDEX_REF: ${INDEX_REF:-/location.html}
      REACT_APP_IMPRINT_REF: ${IMPRINT_REF:-/location.html}
      REACT_APP_PRIVACY_REF: ${PRIVACY_REF:-/location.html}
      REACT_APP_THEME_PRIMARY: ${THEME_PRIMARY:-#152968}
      REACT_APP_THEME_ON_PRIMARY: ${THEME_PRIMARY:-#FFF}

  db:
    image: mariadb
    restart: unless-stopped
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - mariadb:/var/lib/mysql
    ports:
      - "${HOST_MYSQL_PORT:-3306}:3306"
    environment:
      REACT_APP_LOCATION_NAME: ${LOCATION_NAME:-My Testcenter}
      MYSQL_USER: ${MYSQL_USER:-coronatests}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD?err}
      MYSQL_RANDOM_ROOT_PASSWORD: ${MYSQL_RANDOM_ROOT_PASSWORD:-true}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-coronatests}

volumes:
  mariadb: {}
